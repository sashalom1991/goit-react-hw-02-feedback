{"version":3,"sources":["components/Section/index.js","components/Section/Section.jsx","components/FeedbackOptions/index.js","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["Section","title","children","className","FeedbackOptions","onClickGood","onClickNeutral","onClickBad","type","onClick","Statistics","good","neutral","bad","total","percentage","Notification","message","App","state","clickBtnGood","setState","prevState","clickBtnNeutral","clickBtnBad","countTotalFeedback","countPositiveFeedbackPercentage","Math","ceil","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qVAEeA,ECCC,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACrB,OACI,0BAASC,UAAU,UAAnB,UACI,oBAAIA,UAAU,QAAd,SAAuBF,IACtBC,MCLEE,G,MCCS,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,YAAaC,EAAiC,EAAjCA,eAAgBC,EAAiB,EAAjBA,WACpD,OACI,qCACA,wBACIC,KAAK,SACLC,QAASJ,EACTF,UAAU,SAHd,kBAME,wBACEK,KAAK,SACLC,QAASH,EACTH,UAAU,SAHZ,qBAMF,wBACIK,KAAK,SACLC,QAASF,EACTJ,UAAU,SAHd,sBCIOO,G,MAnBI,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,IAAKC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAC7C,OACG,2CAAK,oBAAGZ,UAAU,OAAb,mBAA2BQ,KAC3B,oBAAGR,UAAU,OAAb,sBAA8BS,KAC9B,oBAAGT,UAAU,OAAb,kBAA0BU,KAC1B,oBAAGV,UAAU,OAAb,oBAA4BW,KAC5B,oBAAGX,UAAU,OAAb,gCAAwCY,EAAxC,YCDGC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAkB,mCAAE,4BAAIA,OCMvCC,E,4MACJC,MAAQ,CACRR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGLO,aAAe,WACb,EAAKC,UAAS,SAACC,GAAgB,MAAO,CAAEX,KAAMW,EAAUX,KAAO,O,EAGjEY,gBAAkB,WAChB,EAAKF,UAAS,SAACC,GAAgB,MAAO,CAAEV,QAASU,EAAUV,QAAU,O,EAGvEY,YAAc,WACZ,EAAKH,UAAS,SAACC,GAAgB,MAAO,CAACT,IAAKS,EAAUT,IAAI,O,EAG5DY,mBAAqB,WACnB,MAA+B,EAAKN,MAEpC,OAFA,EAAQR,KAAR,EAAcC,QAAd,EAAuBC,K,EAKzBa,gCAAkC,WAChC,MAA+B,EAAKP,MAA5BR,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAGvB,OAFiBc,KAAKC,KAAMjB,GAAMA,EAAKC,EAAQC,GAAK,MAE/B,G,4CAGvB,WACE,OACA,sBAAKV,UAAU,MAAf,UACI,cAAC,EAAD,CAAUF,MAAM,wBAAhB,SACE,cAAC,EAAD,CACEI,YAAawB,KAAKT,aAClBd,eAAgBuB,KAAKN,gBACrBhB,WAAYsB,KAAKL,gBAGrB,cAAC,EAAD,CAASvB,MAAM,aAAf,SACI4B,KAAKJ,qBAAuB,EAC5B,cAAC,EAAD,CACEd,KAAMkB,KAAKV,MAAMR,KACjBC,QAASiB,KAAKV,MAAMP,QACpBC,IAAKgB,KAAKV,MAAMN,IAChBC,MAAOe,KAAKJ,qBACZV,WAAYc,KAAKH,oCAEjB,cAAC,EAAD,CAAcT,QAAQ,+B,GAnDlBa,aA2DHZ,IC9Dfa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b3961cd8.chunk.js","sourcesContent":["import Section from \"./Section\";\r\n\r\nexport default Section","import PropTypes from 'prop-types';\r\nimport './Section.css';\r\n\r\nconst Section = ({title, children }) => {\r\n    return (\r\n        <section className=\"section\">\r\n            <h2 className=\"title\">{title}</h2>\r\n            {children}\r\n        </section>\r\n    )\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.element.isRequired\r\n}\r\n\r\nexport default Section","import FeedbackOptions from \"./FeedbackOptions\";\r\n\r\nexport default FeedbackOptions","import PropTypes from 'prop-types';\r\nimport './FeedbackOptions.css'\r\n\r\nconst FeedbackOptions = ({ onClickGood, onClickNeutral, onClickBad }) => {\r\n    return (\r\n        <>\r\n        <button\r\n            type=\"button\"\r\n            onClick={onClickGood}\r\n            className=\"button\"\r\n        >Good\r\n        </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={onClickNeutral}\r\n            className=\"button\"\r\n        >Neutral\r\n        </button>\r\n        <button\r\n            type=\"button\"\r\n            onClick={onClickBad}\r\n            className=\"button\"\r\n        >Bad\r\n        </button>\r\n        </>\r\n    )\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  onClickGood: PropTypes.func.isRequired,\r\n  onClickNeutral: PropTypes.func.isRequired,\r\n  onClickBad: PropTypes.func.isRequired\r\n}\r\n\r\nexport default FeedbackOptions","import PropTypes from 'prop-types';\r\nimport './Statistics.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, percentage }) => {\r\n    return (\r\n       <>   <p className=\"text\">Good: {good}</p>\r\n            <p className=\"text\">Neutral: {neutral}</p>\r\n            <p className=\"text\">Bad: {bad}</p>\r\n            <p className=\"text\">Total: {total}</p>\r\n            <p className=\"text\">Positive feedback: {percentage}%</p>     \r\n        </>\r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    percentage: PropTypes.number.isRequired\r\n}\r\n\r\nexport default Statistics;","import PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => (<><p>{message}</p></>);\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Notification;","import React, { Component } from 'react';\nimport './App.css';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\n\nclass App extends Component  {\n  state = {\n  good: 0,\n  neutral: 0,\n  bad: 0\n  }\n\n  clickBtnGood = () => {\n    this.setState((prevState) => { return { good: prevState.good + 1 }})\n  }\n\n  clickBtnNeutral = () => {\n    this.setState((prevState) => { return { neutral: prevState.neutral + 1 }})\n  }\n\n  clickBtnBad = () => {\n    this.setState((prevState) => { return {bad: prevState.bad+1}})\n  }\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    let total = good + neutral + bad;\n    return total\n  }\n\n  countPositiveFeedbackPercentage = () => {\n    const { good, neutral, bad } = this.state;\n    let posPercent = Math.ceil( good/(good+neutral+bad)*100\n    )\n    return posPercent || 0\n  }\n  \n  render() {\n    return (\n    <div className=\"App\">\n        <Section  title=\"Please leave feedback\">\n          <FeedbackOptions\n            onClickGood={this.clickBtnGood}\n            onClickNeutral={this.clickBtnNeutral}\n            onClickBad={this.clickBtnBad}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          { this.countTotalFeedback() > 0 ?\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              percentage={this.countPositiveFeedbackPercentage()}\n            />\n            : <Notification message=\"No feedback given\"/>\n          }        \n        </Section>\n    </div>\n  );  \n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}